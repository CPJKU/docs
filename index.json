[{"authors":null,"categories":null,"content":"Welcome to the ACCompanion Find the description of the system here. Find the code on github. Watch the ACCompanion in action on youtube. ","date":1695945600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1695945600,"objectID":"2044f4c5d2d768a47f8d17b518bc4675","permalink":"http://CPJKU.github.io/docs/accompanion/","publishdate":"2023-09-29T00:00:00Z","relpermalink":"/docs/accompanion/","section":"accompanion","summary":"Introduction to ACCompanion","tags":null,"title":"","type":"book"},{"authors":null,"categories":null,"content":"Welcome to the BasisMixer Find the full description of the system here. Find the code on github. Get started with this tutorial. ","date":1695945600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1695945600,"objectID":"e7b2f8896a79f32941851a9f9f32e96b","permalink":"http://CPJKU.github.io/docs/basismixer/","publishdate":"2023-09-29T00:00:00Z","relpermalink":"/docs/basismixer/","section":"basismixer","summary":"Introduction to BasisMixer","tags":null,"title":"","type":"book"},{"authors":null,"categories":null,"content":"Welcome to Parangonar Download the package from github or from pypi: pip install parangonar. Visualize alignments with parangonada. ","date":1695945600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1695945600,"objectID":"97a36370a6431fdfd7caebe7ccbc9ef1","permalink":"http://CPJKU.github.io/docs/parangonar/","publishdate":"2023-09-29T00:00:00Z","relpermalink":"/docs/parangonar/","section":"parangonar","summary":"Introduction to Parangonar","tags":null,"title":"","type":"book"},{"authors":null,"categories":null,"content":"   Welcome to partitura Find the technical documentation on readthedocs. Download the package from github or from pypi: pip install partitura. There is a tutorial on github with a getting started jupyter notebook. ","date":1695945600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1695945600,"objectID":"239ba76436829b68588ff9672e313616","permalink":"http://CPJKU.github.io/docs/partitura/","publishdate":"2023-09-29T00:00:00Z","relpermalink":"/docs/partitura/","section":"partitura","summary":"Introduction to Partitura","tags":null,"title":"","type":"book"},{"authors":null,"categories":null,"content":"A match file consists of three main parts. The first part at the beginning of the file contains meta-information such as versioning, names and tags, and score related information, i.e., key signature, time signature, etc. The second part is the main core of the document and contains note-wise alignments, as well as deletions and insertions entries. The third and last part is found at the end of the document and contains all listed sustain pedal events with their MIDI cc values.\nGlobal Information Lines    Syntax Value type Mandatory Description     info(matchFileVersion,value). string  Matchfile version (current 1.0.0 previous 5.0, see version changes)   info(piece,value). string  Piece name or opus number   info(scoreFileName,value). string  Corresponding score file name (e.g. musicxml)   info(scoreFilePath,value). string  Corresponding score file path   info(midiFileName,value). string  Corresponding MIDIfile name   info(midiFilePath,value). string  Corresponding MIDI file path   info(audioFileName,value). string  Corresponding audio file name   info(audioFilePath,value). string  Corresponding audio file path   info(audioFirstNote,value). float  Time of first note onset in audio file   info(audioLastNote,value). float  Time of last note onset in audio file   info(performer,value). string  Performer name   info(composer,value). string  Composer name   info(midiClockUnits,value). integer  MIDI Clock Units (MIDI parts per quarter)   info(midiClockRate,value). integer  MIDI Clock Rate (Microseconds per quarter)   info(keySignature,value). [string]  deprecated (first) Key signature (see score properties)   info(timeSignature,value). [integer / integer]  deprecated (first) Time signature (see score properties)   info(beatSubdivision,value). [int]  deprecated Beat subdivision (see score properties)   info(tempoIndication,value). [string]  deprecated Tempo directions (see score properties)   info(approximateTempo,value). float  Approximate tempo   info(subtitle,value). string  Subtitles    Score Property Lines Time Signature: scoreprop(timeSignature,TimeSigValue,Measure:Beat,Offset,Duration,OnsetInBeats).\nKey Signature: scoreprop(keySignature,KeySigValue,Measure:Beat,Offset,Duration,OnsetInBeats).\nBeat Subdivision: scoreprop(beatSubDivision,BeatSubValue,Measure:Beat,Offset,Duration,OnsetInBeats).\nDirections: scoreprop(directions,DirectionsValue,Measure:Beat,Offset,Duration,OnsetInBeats).\n   Value name Value type Description     Measure integer measure number (starting at 1, 0 for anacrusis) of the score position   Beat integer integer beat number (starting at 1) of the score position   Offset Integer / integer offset of the score position****from beat position (in symbolic duration; fraction of whole notes)   OnsetInBeats float score position in contiguous beats (beat 0 = start of measure 1, beat unit = time signature denominator)   TimeSigValue integer / integer Time signature   KeySigValue  Key signature   BeatSubValue Integer ?   DirectionsValue [string] A list of performance directions    Section Lines Section in the score with reference positions in the underlying (non-unfolded) score: section(StartInBeatsUnfolded,EndInBeatsUnfolded, StartInBeatsOriginal, EndInBeatsOriginal, RepeatEndType).\nPossible values:\n   Value name Value type Description     StartInBeatsUnfolded float Start of the segment in beats in unfolded score time   EndInBeatsUnfolded float End of the segment in beats in the unfolded score time   StartInBeatsOriginal float Start of the segment in beats in the original score   EndInBeatsOriginal float End of the segment in beats in the original score   RepeatEndType [string] optional: list of type of the end of segment, e.g. “fine” “repeat left”, “volta end”, etc.    Match Lines Beat, downbeat, or any score position annotation between performance and score: stime(Measure:Beat,Offset,OnsetInBeats,AnnotationType)-ptime(Onsets).\n   Value name Value type Description     Measure integer measure number (starting at 1, 0 for anacrusis) of the score position   Beat integer integer beat number (starting at 1) of the score position   Offset Integer / integer offset of the score position****from beat position (in symbolic duration; fraction of whole notes)   OnsetInBeats float score position in contiguous beats (beat 0 = start of measure 1, beat unit = time signature denominator)   AnnotationType [string] Optional: list of types of annotation, e.g. “beat”, “measure”, or “downbeat”   Onsets [integer] Array of at least one time in parts/ticks of the performance annotation corresponding to the score position    Notes in the performance:\nnote(ID,MIDIpitch,Onset,Offset,Velocity).\n   Value name Value type Description     ID integer Note identifier   MIDIpitch integer Pitch 0-127   Onset integer Time in parts/ticks of the note on message   Offset integer Time in parts/ticks of the note off message   adjustedOffset integer deprecated Sounding note off when adjusted by sustain pedal information (see pedal lines)   Velocity integer Note on velocity 0-127    Notes in the score snote(Anchor,[NoteName,Modifier],Octave,Measure:Beat,Offset,Duration,OnsetInBeats,OffsetInBeats,ScoreAttributesList).\n   Value name Value type Description     Anchor string Note identifier (we should specifically reserve “-” at the end of the anchor as “repetition”)   NoteName string Pitch class name in [C, D, E, F, G, A, B]   Modifier string pitch modifier in [“”, n, b, #, bb, x]   Octave integer octave number (scientific notation, middle C is in octave 4)   Measure integer measure number (starting at 1, 0 for anacrusis)   Beat integer integer beat number of note onset (starting at 1)   Offset integer / integer offset from beat position (in symbolic duration; fraction of whole notes)   OnsetInBeats float onset position in contiguous beats (beat 0 = start of measure 1, beat unit = time signature denominator)   DurationInBeats float duration in beats   ScoreAttributesList [string] note attributes (“grace”, “appoggiatura”, etc.)    score note matched to a performed note: snote( _ , … , _ )-note( _ , … , _ ).\nsnote(Anchor,NoteName,Modifier],Octave,Measure:Beat,Offset,Duration,OnsetInBeats,OffsetInBeats,ScoreAttributesList)-note(ID,MIDIpitch,Onset,Offset,Velocity).\n   Value name Value type Description     Anchor string Note identifier (we should specifically reserve “-” at the end of the anchor as “repetition”)   NoteName string Pitch class name in [C, D, E, F, G, A, B]   Modifier string pitch modifier in [“”, n, b, #, bb, x]   Octave integer octave number (scientific notation, middle C is in octave 4)   Measure integer measure number (starting at 1, 0 for anacrusis)   Beat integer integer beat number of note onset (starting at 1)   Offset integer / integer offset from beat position (in symbolic duration; fraction of whole notes)   OnsetInBeats float onset position in contiguous beats (beat 0 = start of measure 1, beat unit = time signature denominator)   DurationInBeats float duration in beats   ScoreAttributesList [string] note attributes (“grace”, “appoggiatura”, etc.)   ID integer Note identifier   MIDIpitch integer Pitch 0-127   Onset integer Time in parts/ticks of the note on message   Offset integer Time in parts/ticks of the note off message   adjustedOffset integer deprecated Sounding note off when adjusted by sustain pedal information (see pedal lines)   Velocity integer Note on velocity 0-127    Omitted score note Score notes that were omitted in the performance:\nsnote( _ , … , _ )-deletion.\nInserted Performed note: Performed notes that are not found in the score:\ninsertion-note( _ , … , _ ).\nPedal Lines Pedal lines represent MIDI cc 64 (sustain pedal) messages in the performance MIDI file.\nPedal line:\nsustain(Time,Value).\n   Value name Value type Description     Time integer Time in parts/ticks of the pedal message   Value integer Sustain pedal value 0-127    ","date":1654646400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1654646400,"objectID":"0cb1a9fab15bff21672303dc694dc34e","permalink":"http://CPJKU.github.io/docs/match/specification/","publishdate":"2022-06-08T00:00:00Z","relpermalink":"/docs/match/specification/","section":"match","summary":"specification of the match file format.","tags":null,"title":"Format Specification","type":"book"},{"authors":null,"categories":null,"content":"There are two open source datasets of match files available:\n Vienna 4x22 github Vienna 4x22 piano corpus research dataset (n)ASAP note alignments Batik Dataset  ","date":1654646400,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1654646400,"objectID":"d60e73f5f81c700d5280bf4b0c082253","permalink":"http://CPJKU.github.io/docs/match/data/","publishdate":"2022-06-08T00:00:00Z","relpermalink":"/docs/match/data/","section":"match","summary":"There are two open source datasets of match files available:\n Vienna 4x22 github Vienna 4x22 piano corpus research dataset (n)ASAP note alignments Batik Dataset  ","tags":null,"title":"Datasets","type":"book"},{"authors":null,"categories":null,"content":"   Welcome to the Match File Format!\nUse the navigation on the left to:\n see the Match File Format Specification. find data encoded as match files on github.  ","date":1695945600,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1695945600,"objectID":"0129f426837c7ec67c512b7a32736fa4","permalink":"http://CPJKU.github.io/docs/match/","publishdate":"2023-09-29T00:00:00Z","relpermalink":"/docs/match/","section":"match","summary":"Match documentation","tags":null,"title":"Welcome to the official Match Documentation!","type":"book"}]